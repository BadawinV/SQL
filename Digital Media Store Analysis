In this project I am working with a dataset called chinook, which represents a digital media store and includes tables for artists,
albums, media tracks, invoices, and customers.

1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").

SELECT Customerid, FirstName, LastName, Country
     FROM chinook.customers
     WHERE Country <> 'USA'
     ORDER BY Country ASC     
;

2. Show only the Customers from Brazil.

SELECT Customerid, FirstName, LastName, Country
     FROM chinook.customers
     WHERE Country = 'Brazil'  
;

3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry  
     FROM chinook.customers c
     JOIN chinook.invoices i
     ON c.Customerid = i.Customerid
     WHERE i.BillingCountry = 'Brazil'
;

4. Show the Employees who are Sales Agents.

SELECT * FROM employees
    WHERE Title LIKE 'Sales%Agent'
;

5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT BillingCountry
    FROM chinook.invoices
    ORDER BY BillingCountry ASC
;

6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT e.FirstName, e.LastName, COUNT(c.SupportRepId) AS Invoice_Qty
     FROM chinook.customers c
     LEFT JOIN chinook.employees e
     ON c.SupportRepId = e.EmployeeId
     GROUP BY c.SupportRepId
;

7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT SUM(i.total), c.firstName||' '|| c.LastName AS Customer_Name, 
    c.Country, e.FirstName||' '|| e.LastName AS Sales_Agent
     FROM chinook.customers c
     LEFT JOIN chinook.employees e ON c.SupportRepId = e.EmployeeId
     JOIN chinook.invoices i ON i.CustomerId = c.CustomerId
     GROUP BY Customer_Name
;

8. How many Invoices were there in 2009?

SELECT COUNT(InvoiceId)
    FROM chinook.invoices
    WHERE InvoiceDate LIKE '%2009%'
;

9. What are the total sales for 2009?

SELECT SUM(Total)
    FROM chinook.invoices
    WHERE InvoiceDate LIKE '%2009%'
;

10. Write a query that includes the purchased track name with each invoice line item.

SELECT ii.InvoiceLineId, t.Name AS Track_Name
    FROM invoice_items ii
    LEFT JOIN tracks t
    ON ii.TrackId = t.TrackId
    ORDER BY ii.InvoiceLineId
;

11. Write a query that includes the purchased track name AND artist name with each invoice line item.

SELECT ii.InvoiceLineId, t.Name AS Track_Name, t.Composer AS Artist
    FROM invoice_items ii
    LEFT JOIN tracks t
    ON ii.TrackId = t.TrackId
    ORDER BY ii.InvoiceLineId
;

12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name AS track_name, a.Title AS album_name,
    m.Name, g.Name
    FROM tracks t
    LEFT JOIN albums a
    ON t.AlbumId = a.AlbumId
    LEFT JOIN genres g ON t.GenreId = g.GenreId
    LEFT JOIN media_types m ON t.MediaTypeId = m.MediaTypeId
;

13. Show the total sales made by each sales agent.

SELECT e.FirstName || ' ' ||e.LastName AS Sales_Agent, ROUND(SUM(i.Total),2) AS Total_Sales
    FROM invoices i
    LEFT JOIN customers c ON i.CustomerId = c.CustomerId
    LEFT JOIN employees e ON c.SupportRepId = e.EmployeeId
    GROUP BY Sales_Agent
;

14. Which sales agent made the most in sales in 2009?

SELECT e.FirstName || ' ' ||e.LastName AS Sales_Agent, ROUND(SUM(i.Total),2) AS Total_Sales
    FROM invoices i
    LEFT JOIN customers c ON i.CustomerId = c.CustomerId
    LEFT JOIN employees e ON c.SupportRepId = e.EmployeeId
    GROUP BY Sales_Agent
    ORDER BY Total_Sales DESC
    LIMIT 1
;

15. Show the Customer name, Country, name of tracks purchased, composer, and Sales Agent name 
     for all invoices and customers in the USA.

SELECT c.firstName||' '|| c.LastName AS Customer_Name, t.Name, t.Composer,
    c.Country, e.FirstName||' '|| e.LastName AS Sales_Agent
     FROM chinook.customers c
     LEFT JOIN chinook.employees e ON c.SupportRepId = e.EmployeeId
     LEFT JOIN chinook.invoices i ON i.CustomerId = c.CustomerId
     LEFT JOIN chinook.invoice_items ii ON i.InvoiceId = ii.InvoiceID
     LEFT JOIN chinook.tracks t ON t.TrackId = ii.TrackId
     WHERE i.BillingCountry = 'USA'
     ORDER BY Sales_Agent
 ;

16. Show the 5 most popular track names and their composers.

SELECT COUNT(ii.TrackId) AS Num_Sold, t.Name, t.Composer
     FROM invoice_items ii
     LEFT JOIN tracks t ON t.TrackId = ii.TrackId
     GROUP BY t.Name
     ORDER BY Num_Sold DESC
     LIMIT 5
;


17. Find the total sales for each year.

SELECT
    CASE
        WHEN InvoiceDate LIKE  '%2009%' THEN 2009
         WHEN InvoiceDate LIKE  '%2010%' THEN 2010
         WHEN InvoiceDate LIKE  '%2011%' THEN 2011
         WHEN InvoiceDate LIKE  '%2012%' THEN 2012
         WHEN InvoiceDate LIKE  '%2013%' THEN 2013
        END AS 'Invoice_Year',
        ROUND(SUM(Total),2) AS Total_Sales
    FROM chinook.invoices
GROUP BY Invoice_Year
;
